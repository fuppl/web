<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--todo namespace里填dao位置-->
<mapper namespace="com.example.dao.UserDao">
<!--    查询所有-->
    <select id="findAll" resultType="user">
        SELECT * from user
    </select>
<!--    保存用户-->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后获取插入数据的id;keyProperty应该被生成的目标属性，对应实体类, keyColumn与数据库列名，对应表，order表示插入之后执行-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(username,address,sex) values (#{username},#{address},#{sex})
    </insert>
<!--    更新用户-->
    <update id="updateUser" parameterType="user">
        update user set username=#{username},address=#{address},sex=#{sex} where id=#{id}
    </update>
<!--    删除用户,此处花括号里可任意填写，因为值有一个参数吗，只作为占位符使用-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{id}
    </delete>
<!--    根据id查询用户-->
    <select id="findById" parameterType="int" resultType="user">
        select * from USER where id=#{id}
    </select>
<!--    根据用户名查询用户,有两种写法，第二种value为固定写法，不可更改 -->
    <select id="findByName" parameterType="String" resultType="user">
        <!-- select * from user where username like #{name} -->
        select * from user where username like '%${value}%'
    </select>
<!--    查询用户总数-->
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>
<!--    根据queryVo中的条件查询用户-->
    <select id="findUserByVo" parameterType="com.example.entity.QueryVo" resultType="user">
        select * from user where username like #{user.username}
    </select>
</mapper>