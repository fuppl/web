<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    配置业务层-->
    <bean id="accountService" class="com.example.service.impl.AccountServiceImpl">
        <property name="dao" ref="accountDao"/>
    </bean>

<!--    配置账户持久层-->
    <bean id="accountDao" class="com.example.dao.impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>


<!--    配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/spring?serverTimezone=Asia/Shanghai"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

<!--    todo spring中基于xml的声明式事务控制配置步骤
            1 配置事务管理器
            2 配置事务的通知
                此时我们要导入事务约束，tx名称空间约束，以及aop的约束（就是最上面的）（在Data Acess中搜索 xml:tx 第一个就是）
                使用 tx:advice 标签配置事务通知
                    属性：
                        id：给事务通知起一个唯一标志
                        transaction-manager：给事务通知提供一个事务管理器引用
            3 配置AOP中的通用切入点表达式
            4 建立事务通知和切入点表达式的对应关系
            5 配置事务的属性
                是在事务通知tx-advice标签内部
-->

<!--    配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    配置事务的通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
<!--        todo 配置事务的属性
             isolation：用于指定事务的隔离级别，默认值时default，表示使用数据库默认隔离级别""
             propagation：用于指定事务的传播行为，默认值时required，表示一定会有事务，这是增删改的选择，查询可以选择supports
             read-only：用于指定事务是否只读，只有查询方法设置为true，默认值为false，表示读写
             no-rollback-for：也是用于指定一个异常，当产生该异常时不回滚，产生其他异常时回滚，没有默认值，表示任何异常都回滚
             rollback-for：用于指定一个异常，当产生该异常时回滚，产生其他异常时，不回滚。没有默认值，表示任何异常都回滚
             timeout：指定事务的超时，默认值是-1，表示永不超时，如果指定了数值，以秒为单位
-->
        <tx:attributes>
<!--            此处name里的内容与AccountServiceImpl中的transfer方法名中相同-->
            <tx:method name="transfer" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

<!--    配置aop-->
    <aop:config>
<!--        配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* com.example.service.impl.*.*(..))"/>
<!--        建立事务通知和切入点表达式的对应关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"/>

    </aop:config>

</beans>